# Generated by Django 4.2.7 on 2024-01-15 10:00:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('content_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.EmailField(max_length=254, verbose_name='Email destinataire')),
                ('from_email', models.EmailField(max_length=254, verbose_name='Email expéditeur')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('html_content', models.TextField(verbose_name='Contenu HTML')),
                ('text_content', models.TextField(blank=True, verbose_name='Contenu texte')),
                ('priority', models.IntegerField(choices=[(1, 'Basse'), (2, 'Normale'), (3, 'Haute'), (4, 'Urgente')], default=2, verbose_name='Priorité')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('sent', 'Envoyé'), ('failed', 'Échoué'), ('cancelled', 'Annulé')], default='pending', verbose_name='Statut')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Programmé pour')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé le')),
                ('error_message', models.TextField(blank=True, verbose_name='Message d\'erreur')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de tentatives')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Nombre maximum de tentatives')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
            ],
            options={
                'verbose_name': 'Email en file d\'attente',
                'verbose_name_plural': 'Emails en file d\'attente',
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('subject_template', models.CharField(max_length=200, verbose_name='Template de sujet')),
                ('html_template', models.TextField(verbose_name='Template HTML')),
                ('text_template', models.TextField(blank=True, verbose_name='Template texte')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
            ],
            options={
                'verbose_name': 'Template d\'email',
                'verbose_name_plural': 'Templates d\'emails',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sending', 'En cours d\'envoi'), ('sent', 'Envoyé'), ('failed', 'Échoué'), ('bounced', 'Retourné'), ('opened', 'Ouvert'), ('clicked', 'Cliqué')], default='pending', verbose_name='Statut')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé le')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='Ouvert le')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Cliqué le')),
                ('error_message', models.TextField(blank=True, verbose_name='Message d\'erreur')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de tentatives')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='content_management.newslettercampaign', verbose_name='Campagne')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='content_management.newsletter', verbose_name='Abonné')),
            ],
            options={
                'verbose_name': 'Log de newsletter',
                'verbose_name_plural': 'Logs de newsletters',
                'unique_together': {('campaign', 'subscriber')},
            },
        ),
        migrations.AddIndex(
            model_name='newsletterlog',
            index=models.Index(fields=['status', 'created_at'], name='jobs_newsle_status_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='newsletterlog',
            index=models.Index(fields=['campaign', 'status'], name='jobs_newsle_campaign_status_idx'),
        ),
        migrations.AddIndex(
            model_name='newsletterlog',
            index=models.Index(fields=['subscriber', 'status'], name='jobs_newsle_subscriber_status_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['status', 'priority', 'scheduled_at'], name='jobs_emailq_status_priority_scheduled_at_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['to_email', 'status'], name='jobs_emailq_to_email_status_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['created_at'], name='jobs_emailq_created_at_idx'),
        ),
    ]
