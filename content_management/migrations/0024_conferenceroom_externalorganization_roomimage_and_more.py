# Generated by Django 5.2.5 on 2025-08-26 16:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content_management', '0023_remove_news_author_remove_news_category_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConferenceRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la salle')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacité')),
                ('area', models.PositiveIntegerField(help_text='Surface en m²', verbose_name='Surface')),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix par heure')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix par jour')),
                ('features', models.JSONField(blank=True, default=list, help_text='Liste des équipements: projecteur, son, wifi, etc.', verbose_name='Équipements disponibles')),
                ('is_active', models.BooleanField(default=True, verbose_name='Disponible')),
                ('maintenance_until', models.DateTimeField(blank=True, null=True, verbose_name="Maintenance jusqu'au")),
            ],
            options={
                'verbose_name': 'Salle de conférence',
                'verbose_name_plural': 'Salles de conférence',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExternalOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'organisation")),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
                ('organization_type', models.CharField(choices=[('company', 'Entreprise'), ('ngo', 'ONG'), ('government', 'Institution gouvernementale'), ('educational', 'Établissement éducatif'), ('other', 'Autre')], max_length=50, verbose_name="Type d'organisation")),
                ('contact_person', models.CharField(max_length=100, verbose_name='Personne de contact')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('tax_id', models.CharField(blank=True, max_length=50, verbose_name='Numéro de TVA')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Organisation externe',
                'verbose_name_plural': 'Organisations externes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RoomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('image', models.ImageField(upload_to='rooms/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Image principale')),
            ],
            options={
                'verbose_name': 'Image de salle',
                'verbose_name_plural': 'Images de salle',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoomBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('event_title', models.CharField(max_length=200, verbose_name="Titre de l'événement")),
                ('event_description', models.TextField(blank=True, verbose_name="Description de l'événement")),
                ('start_time', models.DateTimeField(verbose_name='Heure de début')),
                ('end_time', models.DateTimeField(verbose_name='Heure de fin')),
                ('attendees_count', models.PositiveIntegerField(help_text='Nombre estimé de participants', verbose_name='Nombre de participants')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('cancelled', 'Annulée'), ('completed', 'Terminée'), ('rejected', 'Refusée')], default='pending', max_length=20, verbose_name='Statut')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix total')),
                ('deposit_paid', models.BooleanField(default=False, verbose_name='Acompte payé')),
                ('full_payment_paid', models.BooleanField(default=False, verbose_name='Paiement complet')),
                ('special_requirements', models.TextField(blank=True, verbose_name='Exigences spéciales')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Notes administrateur')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de confirmation')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_bookings', to=settings.AUTH_USER_MODEL, verbose_name='Confirmé par')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='content_management.externalorganization', verbose_name='Organisation')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='content_management.conferenceroom', verbose_name='Salle')),
            ],
            options={
                'verbose_name': 'Réservation de salle',
                'verbose_name_plural': 'Réservations de salle',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('payment_type', models.CharField(choices=[('deposit', 'Acompte'), ('full_payment', 'Paiement complet'), ('partial', 'Paiement partiel'), ('refund', 'Remboursement')], max_length=20, verbose_name='Type de paiement')),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Virement bancaire'), ('check', 'Chèque'), ('cash', 'Espèces'), ('credit_card', 'Carte de crédit'), ('other', 'Autre')], max_length=20, verbose_name='Méthode de paiement')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='Référence')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Vérifié')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de vérification')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Vérifié par')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='content_management.roombooking', verbose_name='Réservation')),
            ],
            options={
                'verbose_name': 'Paiement de réservation',
                'verbose_name_plural': 'Paiements de réservation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='conferenceroom',
            name='images',
            field=models.ManyToManyField(blank=True, to='content_management.roomimage', verbose_name='Images'),
        ),
        migrations.CreateModel(
            name='RoomMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('title', models.CharField(max_length=200, verbose_name='Titre de la maintenance')),
                ('description', models.TextField(verbose_name='Description')),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('maintenance_type', models.CharField(choices=[('scheduled', 'Planifiée'), ('emergency', 'Urgente'), ('preventive', 'Préventive'), ('corrective', 'Corrective')], max_length=20, verbose_name='Type de maintenance')),
                ('status', models.CharField(choices=[('planned', 'Planifiée'), ('in_progress', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='planned', max_length=20, verbose_name='Statut')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Coût')),
                ('technician', models.CharField(blank=True, max_length=100, verbose_name='Technicien')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='content_management.conferenceroom', verbose_name='Salle')),
            ],
            options={
                'verbose_name': 'Maintenance de salle',
                'verbose_name_plural': 'Maintenances de salle',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddIndex(
            model_name='roombooking',
            index=models.Index(fields=['room', 'start_time', 'end_time'], name='content_man_room_id_a0d9e0_idx'),
        ),
        migrations.AddIndex(
            model_name='roombooking',
            index=models.Index(fields=['status', 'start_time'], name='content_man_status_e29581_idx'),
        ),
    ]
